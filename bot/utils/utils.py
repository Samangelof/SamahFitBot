from aiogram import types
from aiogram.dispatcher import FSMContext

from bot.states.states import ParticipantStates
from bot.states.states import QUESTION_NUMBERS, TOTAL_QUESTIONS
from bot.utils.logger import log_info, log_error, log_warning


async def send_with_progress(message: types.Message, state: FSMContext, text: str, reply_markup=None):
    current_state = await state.get_state()
    question_number = QUESTION_NUMBERS.get(current_state)

    if question_number:
        progress_text = f"({question_number}/{TOTAL_QUESTIONS}) {text}"
    else:
        progress_text = text

    await message.answer(progress_text, reply_markup=reply_markup)

# def format_application(user_data: dict) -> str:
#     fields = {
#         "–ò–º—è": "name",
#         "–ü–æ–ª": "gender",
#         "–í–æ–∑—Ä–∞—Å—Ç": "age",
#         "–†–æ—Å—Ç": "height",
#         "–í–µ—Å": "weight",
#         "–§–∏–∑–∏—á–µ—Å–∫–∞—è —Ñ–æ—Ä–º–∞": "physical_condition",
#         "–¢—Ä–µ–Ω–∏—Ä–æ–≤–æ—á–Ω—ã–µ —Ü–µ–ª–∏": "training_goals",
#         "–ì–ª–∞–≤–Ω–∞—è —Ü–µ–ª—å": "main_goal",
#         "–£—Ä–æ–≤–µ–Ω—å –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏": "fitness_level",
#         "–ú–µ—Å—Ç–æ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫": "training_location",
#         "–í—Ä–µ–º—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫": "training_time",
#         "–ß–∞—Å—Ç–æ—Ç–∞ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫": "training_frequency",
#         "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏": "training_duration",
#         "–¢–∏–ø—ã —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫": "training_types",
#         "–ù–∞–ª–∏—á–∏–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π": "has_limitations",
#         "–ì—Ä–∞—Ñ–∏–∫ –ø–∏—Ç–∞–Ω–∏—è": "eating_schedule",
#         "–ü–∏—â–µ–≤—ã–µ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è": "diet_preferences",
#         "–ê–ª–ª–µ—Ä–≥–∏–∏": "has_allergies",
#         "–í—Ä–µ–º—è –Ω–∞ –≥–æ—Ç–æ–≤–∫—É": "cooking_time",
#         "–§–æ—Ä–º–∞—Ç —Ä–µ—Ü–µ–ø—Ç–æ–≤": "recipe_format",
#         "–í–µ–¥–µ–Ω–∏–µ –∏—Å—Ç–æ—Ä–∏–∏ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫": "tracking_history",
#         "–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç—ã –ø—Ä–æ–≥—Ä–∞–º–º—ã": "program_priority",
#         "–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è": "additional_info",
#         "–û–ø—ã—Ç —Å —Å–ø–æ—Ä—Ç–∏–≤–Ω—ã–º –ø–∏—Ç–∞–Ω–∏–µ–º": "sports_nutrition_experience",
#         "–¢–∏–ø—ã —Å–ø–æ—Ä—Ç–∏–≤–Ω–æ–≥–æ –ø–∏—Ç–∞–Ω–∏—è": "sports_nutrition_types",
#         "–ë—é–¥–∂–µ—Ç –Ω–∞ —Å–ø–æ—Ä—Ç–∏–≤–Ω–æ–µ –ø–∏—Ç–∞–Ω–∏–µ": "sports_nutrition_budget"
#     }


#     lines = ["–ù–æ–≤–∞—è –∞–Ω–∫–µ—Ç–∞! üöÄ"]
#     for title, key in fields.items():
#         value = user_data.get(key, "–ù–µ —É–∫–∞–∑–∞–Ω–æ")
#         lines.append(f"{title}: {value}")

#     return "\n".join(lines)





def format_application(answers: dict, user_first_name: str, user_username: str, application_id: int, amount: str) -> str:
    def get(key, suffix=''):
        val = answers.get(key)
        return f"{val}{suffix}" if val else "‚Äî"

    def get_bool(key):
        val = answers.get(key)
        if isinstance(val, str):
            val = val.lower()
        return "–í–µ–¥—ë—Ç—Å—è" if val in ["–¥–∞", "yes", "true", True] else "–ù–µ—Ç"

    def get_list(key):
        val = answers.get(key)
        return ', '.join(val) if val else "‚Äî"

    # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –∞–Ω–∫–µ—Ç—É
    message = f"–ù–æ–≤–∞—è –∞–Ω–∫–µ—Ç–∞! üöÄ\n\n"

    # –õ–∏—á–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
    message += f"–ò–º—è: {get('name')}\n"
    message += f"–ü–æ–ª: {get('gender')}\n"
    message += f"–í–æ–∑—Ä–∞—Å—Ç: {get('age')}\n"
    message += f"–†–æ—Å—Ç: {get('height')} —Å–º\n"
    message += f"–í–µ—Å: {get('weight')} –∫–≥\n"
    message += f"–§–∏–∑–∏—á–µ—Å–∫–∞—è —Ñ–æ—Ä–º–∞: {get('physical_condition')}\n"
    message += f"–¢—Ä–µ–Ω–∏—Ä–æ–≤–æ—á–Ω—ã–µ —Ü–µ–ª–∏: {get('training_goals')}\n"
    message += f"–ì–ª–∞–≤–Ω–∞—è —Ü–µ–ª—å: {get('main_goal')}\n"
    message += f"–£—Ä–æ–≤–µ–Ω—å –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏: {get('fitness_level')}\n"
    message += f"–ú–µ—Å—Ç–æ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫: {get('training_location')}\n"
    message += f"–í—Ä–µ–º—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫: {get('training_time')}\n"
    message += f"–ß–∞—Å—Ç–æ—Ç–∞ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫: {get('training_frequency')} —Ä–∞–∑ –≤ –Ω–µ–¥–µ–ª—é\n"
    message += f"–ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏: {get('training_duration')}\n"
    message += f"–¢–∏–ø—ã —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫: {get('training_types')}\n"
    message += f"–û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è: {get('has_limitations')}\n\n"

    # –ü—Ä–æ–≥—Ä–∞–º–º–∞
    message += f"üì¶ –ü—Ä–æ–≥—Ä–∞–º–º–∞:\n"
    message += f"–§–æ—Ä–º–∞—Ç —Ä–µ—Ü–µ–ø—Ç–æ–≤: {get('recipe_format')}\n"
    message += f"–ò—Å—Ç–æ—Ä–∏—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫: {get_bool('tracking_history')}\n"
    message += f"–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç—ã –ø—Ä–æ–≥—Ä–∞–º–º—ã: {get('program_priority')}\n\n"

    # –ü–∏—Ç–∞–Ω–∏–µ
    message += f"ü•ó –ü–∏—Ç–∞–Ω–∏–µ:\n"
    message += f"–ì—Ä–∞—Ñ–∏–∫: {get('eating_schedule')}\n"
    message += f"–ü–∏—â–µ–≤—ã–µ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è: {get('diet_preferences')}\n"
    message += f"–ê–ª–ª–µ—Ä–≥–∏–∏: {get('has_allergies')}\n"
    message += f"–í—Ä–µ–º—è –Ω–∞ –≥–æ—Ç–æ–≤–∫—É: {get('cooking_time')}\n\n"

    # –°–ø–æ—Ä—Ç–∏–≤–Ω–æ–µ –ø–∏—Ç–∞–Ω–∏–µ
    message += f"üíä –°–ø–æ—Ä—Ç–∏–≤–Ω–æ–µ –ø–∏—Ç–∞–Ω–∏–µ:\n"
    message += f"–û–ø—ã—Ç: {get_bool('sports_nutrition_experience')}\n"
    message += f"–¢–∏–ø—ã: {get_list('sports_nutrition_types')}\n"
    message += f"–ë—é–¥–∂–µ—Ç: {get('sports_nutrition_budget')}\n\n"

    # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
    message += f"–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è: {get('additional_info')}\n\n"

    # –°—Ç–∞—Ç—É—Å –æ–ø–ª–∞—Ç—ã
    message += f"–°—Ç–∞—Ç—É—Å –æ–ø–ª–∞—Ç—ã: ‚úÖ –û–ø–ª–∞—á–µ–Ω–æ\n"
    message += f"–°—É–º–º–∞: {amount}‚ÇΩ\n"
    message += f"Telegram: @{user_username}\n"
    message += f"ID –∑–∞—è–≤–∫–∏: {application_id}\n"

    return message
